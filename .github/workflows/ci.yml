name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '**'

jobs:
  lint:
    name: Linter
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.0

      - name: Setup dependencies
        run: pip install -r requirements.txt

      - name: Run linter
        run: pylint ./kubedeployer ./tests

  unit-tests:
    name: Run unit-tests
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.0

      - name: Setup dependencies
        run: pip install -r requirements.txt

      - name: Run unit-tests
        run: pytest ./tests/unit/

  push-to-registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    needs: [lint, unit-tests]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: itlabsio/kubedeployer

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trigger-pipeline:
    name: Trigger Gitlab pipeline
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [ lint, unit-tests ]
    steps:
      - name: Run pipeline
        env:
          URL: ${{ secrets.GITLAB_URL }}
          TOKEN: ${{ secrets.GITLAB_TOKEN }}
        run: |
          curl -X POST --fail -F token=${TOKEN} -F ref=github ${URL}
